"use strict";function ownKeys(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),s.push.apply(s,r)}return s}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(s,!0).forEach(function(e){_defineProperty(t,e,s[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):ownKeys(s).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))})}return t}function _defineProperty(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}require("dotenv").config();var express=require("express"),mongoose=require("mongoose"),Ably=require("ably"),app=express();app.use(express.json()),app.use(express.static("public")),mongoose.connect(process.env.MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0});var postSchema=new mongoose.Schema({message:String,timestamp:Date,username:String,sessionId:String}),Post=mongoose.model("Post",postSchema),ably=new Ably.Realtime(process.env.ABLY_API_KEY),channel=ably.channels.get("opinions");app.get("/posts",function(e,t){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Post.find().sort({timestamp:-1}));case 3:s=e.sent,t.status(200).json(s),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(500).json({message:"Error retrieving posts",error:e.t0});case 10:case"end":return e.stop()}},null,null,[[0,7]])}),app.post("/postOpinion",function(t,s){var r,n,o,a,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.body,n=r.message,o=r.username,a=r.sessionId,n&&""!==n.trim()){e.next=3;break}return e.abrupt("return",s.status(400).json({message:"Message cannot be empty"}));case 3:if(o&&a){e.next=5;break}return e.abrupt("return",s.status(400).json({message:"Username and sessionId are required"}));case 5:return e.prev=5,c=new Post({message:n,timestamp:new Date,username:o,sessionId:a}),e.next=9,regeneratorRuntime.awrap(c.save());case 9:console.log("New post created:",c),channel.publish("newOpinion",_objectSpread({},c.toObject(),{id:c._id})),s.status(201).json(c),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(5),s.status(500).json({message:"Error saving post",error:e.t0});case 17:case"end":return e.stop()}},null,null,[[5,14]])}),app.put("/editPost/:id",function(t,s){var r,n,o,a,c,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.params.id,n=t.body,o=n.message,a=n.username,c=n.sessionId,o&&""!==o.trim()){e.next=4;break}return e.abrupt("return",s.status(400).json({message:"Message cannot be empty"}));case 4:return e.prev=4,e.next=7,regeneratorRuntime.awrap(Post.findById(r));case 7:if(u=e.sent){e.next=10;break}return e.abrupt("return",s.status(404).json({message:"Post not found"}));case 10:if(u.username!==a||u.sessionId!==c)return e.abrupt("return",s.status(403).json({message:"You can only edit your own posts"}));e.next=12;break;case 12:return u.message=o,u.timestamp=new Date,e.next=16,regeneratorRuntime.awrap(u.save());case 16:channel.publish("editOpinion",_objectSpread({},u.toObject(),{id:u._id})),s.status(200).json(u),e.next=23;break;case 20:e.prev=20,e.t0=e.catch(4),s.status(500).json({message:"Error updating post",error:e.t0});case 23:case"end":return e.stop()}},null,null,[[4,20]])}),app.delete("/deletePost/:id",function(t,s){var r,n,o,a,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.params.id,n=t.body,o=n.username,a=n.sessionId,console.log("Received delete request for post ID: ".concat(r)),console.log("Request body: username = ".concat(o,", sessionId = ").concat(a)),e.prev=4,e.next=7,regeneratorRuntime.awrap(Post.findById(r));case 7:if(c=e.sent){e.next=11;break}return console.log("Post with ID ".concat(r," not found")),e.abrupt("return",s.status(404).json({message:"Post not found"}));case 11:if(console.log("Post data: username = ".concat(c.username,", sessionId = ").concat(c.sessionId)),c.username!==o||c.sessionId!==a)return console.log("User ".concat(o," is not authorized to delete this post")),e.abrupt("return",s.status(403).json({message:"You can only delete your own posts"}));e.next=15;break;case 15:return e.next=17,regeneratorRuntime.awrap(Post.findByIdAndDelete(r));case 17:console.log("Post with ID ".concat(r," deleted successfully")),channel.publish("deleteOpinion",{id:r}),s.status(200).json({message:"Post deleted successfully"}),e.next=26;break;case 22:e.prev=22,e.t0=e.catch(4),console.error("Error occurred while deleting post with ID ".concat(r,":"),e.t0),s.status(500).json({message:"Error deleting post",error:e.t0.message,stack:e.t0.stack});case 26:case"end":return e.stop()}},null,null,[[4,22]])});var port=process.env.PORT||3e3;app.listen(port,function(){console.log("Server is running on port ".concat(port))});
//# sourceMappingURL=server.min.js.map
